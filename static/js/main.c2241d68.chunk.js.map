{"version":3,"sources":["Util.js","components/redux/product/productTypes.js","components/Products.js","components/redux/product/productActions.js","components/redux/product/cartActions.js","components/Filter.js","components/Cart.js","components/redux/product/orderAction.js","store.js","components/redux/product/productReducer.js","components/redux/product/cartReducer.js","components/redux/product/orderReducer.js","App.js","index.js"],"names":["formatCurrency","num","Number","toFixed","toLocaleString","FETCH_PRODUCTS","FILTER_PRODUCTS_BY_SIZE","ORDER_PRODUCT_BY_PRICE","ADD_TO_CART","REMOVE_FROM_CART","CREATE_ORDER","CLEAR_ORDER","Products","props","openModal","product","setState","closeModal","state","this","fetchActions","bottom","casecade","products","className","map","href","_id","onClick","src","image","alt","title","price","addToCart","isOpen","onRequestClose","description","availableSizes","x","Component","connect","filteredItems","dispatch","a","fetch","res","json","data","type","payload","getState","cartItems","cart","slice","alreadyExitItem","forEach","count","push","localStorage","setItem","JSON","stringify","Filter","filteredProducts","length","value","sort","onChange","e","sortProducts","target","size","filterProducts","items","filter","indexOf","sortedProducts","b","Cart","createOrder","preventDefault","order","email","name","address","total","reduce","c","clearOrder","handleInput","event","clickProceed","showCheckout","createdAt","left","cascade","item","removeFromCart","right","onSubmit","required","method","headers","body","then","clear","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","action","parse","getItem","applyMiddleware","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2241d68.chunk.js","sourcesContent":["\r\nexport default function formatCurrency(num) {\r\n    return \"$\" +Number(num.toFixed(1)).toLocaleString() +\"\"\r\n    \r\n}\r\n","export const FETCH_PRODUCTS='FETCH_PRODUCTS';\r\nexport const FILTER_PRODUCTS_BY_SIZE='FILTER_PRODUCTS_BY_SIZE';\r\nexport const ORDER_PRODUCT_BY_PRICE='ORDER_PRODUCT_BY_PRICE';\r\nexport const ADD_TO_CART='ADD_TO_CART';\r\nexport const REMOVE_FROM_CART='REMOVE_FROM_CART';\r\nexport const CREATE_ORDER=\"CREATE_ORDER\";\r\nexport const CLEAR_ORDER=\"CLEAR_ORDER\";\r\nexport const CLEAR_CART=\"CLEAR_CART\";\r\n// export const FETCH_ORDERS=\"FETCH_ORDERS\";\r\n\r\n","import React, { Component } from 'react'\r\nimport formatCurrency from '../Util'\r\nimport Fade from 'react-reveal/Fade'\r\nimport Modal from 'react-modal'\r\nimport Zoom from 'react-reveal/Zoom'\r\nimport { connect } from 'react-redux'\r\nimport {fetchActions} from './redux/product/productActions'\r\nimport {addToCart} from './redux/product/cartActions'\r\nclass Products extends Component {\r\n    //dsdsd\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             product:null\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchActions()\r\n    }\r\n    openModal=(product)=>{\r\n        this.setState({ product })\r\n    }\r\n    closeModal=()=>{\r\n        this.setState({product:null})\r\n    }\r\n    \r\n    render() {\r\n        const {product}=this.state\r\n        return (\r\n            <div>\r\n                <Fade bottom casecade>\r\n                   {!this.props.products ? (\r\n                   <div>Loading...</div>\r\n                        ):(\r\n                <ul className=\"products\">\r\n                    {this.props.products.map((product)=>(\r\n                        <li key={product._id}>\r\n                            <div className=\"product\">\r\n                                <a href={\"# \"+ product._id} onClick={()=>this.openModal(product)}>\r\n                                    <img src={product.image} alt={product.title} ></img>\r\n                                    <p>{product.title}</p>\r\n                                </a>\r\n                                <div className=\"product_price\">\r\n                                    <div>{formatCurrency(product.price)}</div>\r\n                                    <button className=\"button primary\" onClick={()=>this.props.addToCart(product)}>Add to Cart</button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n\r\n                </ul>\r\n                    )\r\n                }\r\n                </Fade>\r\n                {product && (\r\n                <Modal isOpen={true}\r\n                onRequestClose={this.closeModal}>\r\n                    <Zoom>\r\n                        <button className=\"close-modal\" onClick={this.closeModal}>x</button>\r\n                        <div className=\"product-details\">\r\n                            <img src={product.image }alt={product.title}></img>\r\n                            <div className=\"product-details-description\">\r\n                                <p>\r\n                                 <strong> {product.title}</strong>  \r\n                                </p>\r\n                                <p>{product.description}</p>\r\n                                <p>\r\n                                    Available Sizes: {\" \"}\r\n                                    {product.availableSizes.map(x=>\r\n                                    <span>{\" \"} <button className=\"button\">{x}</button></span>)}\r\n                                </p>\r\n                                <div className=\"product-price\">\r\n                                    <div>{formatCurrency(product.price)}</div>\r\n                                    <button className=\"button primary\" \r\n                                    onClick={()=>{\r\n                                    this.props.addToCart(product)\r\n                                    this.closeModal()\r\n                                    }}>\r\n                                        Add to cart\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Zoom>\r\n                </Modal>\r\n                )}\r\n\r\n            </div>\r\n                \r\n        )}\r\n    }\r\n\r\nexport default connect((state)=>({products: state.products.filteredItems}),{\r\n    fetchActions,\r\n    addToCart\r\n})(Products);\r\n","import {ORDER_PRODUCT_BY_PRICE} from './productTypes'\r\nimport { FILTER_PRODUCTS_BY_SIZE } from './productTypes';\r\nimport {FETCH_PRODUCTS} from './productTypes'\r\n\r\nexport const  fetchActions=()=> async (dispatch)=>{\r\n        const res=await fetch(\"/api/products\");\r\n        const data=await res.json();\r\n        dispatch({\r\n            type:FETCH_PRODUCTS,\r\n            payload:data,\r\n        });\r\n        };\r\nexport const filterProducts=(products,size) => (dispatch)=>{\r\n    dispatch({\r\n        type:FILTER_PRODUCTS_BY_SIZE,\r\n        payload:{\r\n            size:size,\r\n            items:size===''?products\r\n            :products.filter(x=>x.availableSizes.indexOf(size)>=0),\r\n        }\r\n    })\r\n}\r\nexport const sortProducts=(filteredProducts , sort)=>(dispatch)=>{\r\n    const sortedProducts=filteredProducts.slice()\r\n    if(sort===\"\"){\r\n        sortedProducts.sort((a,b)=>(a._id>b._id?1:-1))\r\n    }\r\n    else{\r\n        sortedProducts.sort((a,b)=>(\r\n        sort==='lowest'?\r\n        a.price>b.price?\r\n        1:-1\r\n        :a.price>b.price?\r\n        -1:1\r\n            ))\r\n    }\r\n    dispatch({\r\n        type:ORDER_PRODUCT_BY_PRICE,\r\n        payload:{\r\n            sort:sort,\r\n            items:sortedProducts\r\n        }   \r\n    }\r\n    )}","import { ADD_TO_CART, REMOVE_FROM_CART } from \"./productTypes\";\r\n\r\nexport const addToCart=(product)=>(dispatch,getState)=>{\r\n    const cartItems=getState().cart.cartItems.slice();\r\n    let alreadyExitItem=false;\r\n    cartItems.forEach((x) => {\r\n        if(x._id===product._id){\r\n            alreadyExitItem=true;\r\n            x.count++;\r\n            \r\n        } \r\n    });\r\n    if(!alreadyExitItem){\r\n        cartItems.push({...product, count:1})\r\n    }\r\n    dispatch({\r\n        type:ADD_TO_CART,\r\n        payload:{\r\n            cartItems\r\n        }\r\n    });\r\n    localStorage.setItem(\"cartItems\",JSON.stringify(cartItems))\r\n}\r\n\r\nexport const removeFromCart = (product) => (dispatch, getState) => {\r\n    const cartItems = getState()\r\n      .cart.cartItems.slice()\r\n      .filter((x) => x._id !== product._id);\r\n    dispatch({ type: REMOVE_FROM_CART, payload: { cartItems } });\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n  };","import React, { Component } from 'react'\r\nimport {filterProducts,sortProducts} from './redux/product/productActions'\r\nimport {connect} from 'react-redux'\r\n\r\n class Filter extends Component {\r\n    render() {\r\n        return (\r\n            !this.props.filteredProducts?(\r\n                <di>Loading...</di>\r\n            ):(\r\n            <div className=\"filter-container\">\r\n                <div className=\"filter-result\" >\r\n                    {this.props.filteredProducts.length} Products\r\n                    </div>\r\n                <div className=\"filter-sort\">Order {\" \"}\r\n                <select value={this.props.sort} onChange={(e)=>this.props.sortProducts(this.props.filteredProducts, e.target.value)}>\r\n                   <option value=\"\">Latest</option>\r\n                    <option value=\"lowest\">lowest</option>\r\n                    <option value=\"highest\">highest</option>\r\n                </select>\r\n                </div>\r\n                <div className=\"filter-size\">Filter {\" \"}\r\n                <select value={this.props.size} \r\n                onChange={(e)=>this.props.filterProducts(this.props.products,e.target.value)}>\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"XS\">XS</option>\r\n                    <option value=\"S\">S</option>\r\n                    <option value=\"M\">M</option>\r\n                    <option value=\"L\">L</option>\r\n                    <option value=\"XL\">XL</option>\r\n                    <option value=\"XXl\">XXL</option>\r\n                    \r\n                </select>\r\n                </div>\r\n                \r\n            </div>\r\n            )\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state)=>({\r\n    size:state.products.size,\r\n    sort:state.products.sort,\r\n    products:state.products.items,\r\n    filteredProducts:state.products.filteredItems,\r\n}),\r\n{\r\n    filterProducts,\r\n    sortProducts,\r\n})(Filter);","import React, { Component } from 'react'\r\nimport formatCurrency from '../Util'\r\nimport Fade from 'react-reveal/Fade'\r\nimport { connect } from 'react-redux'\r\nimport { removeFromCart } from './redux/product/cartActions'\r\nimport {createOrder,clearOrder} from './redux/product/orderAction'\r\nimport Modal from \"react-modal\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\n\r\n class Cart extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email:\"\",\r\n            name:\"\",\r\n            address:\"\",\r\n            showCheckout:false\r\n        }\r\n    }\r\n    createOrder=(e)=>{\r\n        e.preventDefault();\r\n        const order={\r\n            email:this.state.email,\r\n            name:this.state.name,\r\n            address:this.state.address,\r\n            cartItems:this.props.cartItems,\r\n            total:this.props.cartItems.reduce((a,c)=>a+c.price*c.count,0)\r\n        }\r\n        this.props.createOrder(order)  \r\n    }\r\n    closeModal = () => {\r\n        this.props.clearOrder();\r\n      };\r\n    handleInput=(event)=>{\r\n        this.setState({[event.target.name]:event.target.value})\r\n    }\r\n    clickProceed=()=>{\r\n        this.setState({\r\n            showCheckout:true\r\n        })\r\n    }\r\n    render() {\r\n        const { cartItems,order } = this.props\r\n        return (\r\n            <div>\r\n                {cartItems.length === 0 ? (\r\n                    <div className=\"cart cart-header\">\r\n                        Cart is empty\r\n                    </div>) : (\r\n                        <div className=\"cart cart-header\">\r\n                            You have {cartItems.length} items in the cart\r\n                        </div>)}\r\n\r\n                        {order && (\r\n          <Modal isOpen={true} onRequestClose={this.closeModal}>\r\n            <Zoom>\r\n              <button className=\"close-modal\" onClick={this.closeModal}>\r\n                x\r\n              </button>\r\n              <div className=\"order-details\">\r\n                <h3 className=\"success-message\">Your order has been placed.</h3>\r\n                <h2>Order {order._id}</h2>\r\n                <ul>\r\n                  <li>\r\n                    <div>Name:</div>\r\n                    <div>{order.name}</div>\r\n                  </li>\r\n                  <li>\r\n                    <div>Email:</div>\r\n                    <div>{order.email}</div>\r\n                  </li>\r\n                  <li>\r\n                    <div>Address:</div>\r\n                    <div>{order.address}</div>\r\n                  </li>\r\n                  <li>\r\n                    <div>Date:</div>\r\n                    <div>{order.createdAt}</div>\r\n                  </li>\r\n                  <li>\r\n                    <div>Total:</div>\r\n                    <div>{formatCurrency(order.total)}</div>\r\n                  </li>\r\n                  <li>\r\n                    <div>Cart Items:</div>\r\n                    <div>\r\n                      {order.cartItems.map((x) => (\r\n                        <div>\r\n                          {x.count} {\" x \"} {x.title}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </Zoom>\r\n          </Modal>\r\n        )}\r\n                <div className=\"cart\">\r\n                    <Fade left cascade={true}>\r\n                    <ul className=\"cart-items\">\r\n                        {cartItems.map(item => (\r\n                            <li key={item._id}>\r\n                                <img src={item.image} alt={item.title}></img>\r\n                                <div>\r\n                                    <div>{item.title}</div>\r\n                                    <div className=\"right\">\r\n                                        {formatCurrency(item.price)} x {item.count} {\" \"}\r\n                                        <button className=\"button\" onClick={() => this.props.removeFromCart(item)}>Remove </button>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    </Fade>\r\n                </div>\r\n                {cartItems.length!==0 &&(\r\n                    <div>\r\n                    <div className=\"cart\">\r\n                        <div className=\"total\">\r\n                            \r\n                            <div>\r\n                                Total:{\" \"}\r\n                                {formatCurrency(cartItems.reduce((a,b)=>a+b.price*b.count,0))}\r\n                            </div>\r\n                            <button onClick={this.clickProceed} className=\"button primary\">Proceed</button>\r\n                        </div>\r\n                    </div>\r\n                        {this.state.showCheckout &&(\r\n                             <Fade right casecade>\r\n                                <div className=\"cart\">\r\n                                    <form onSubmit={this.createOrder}>\r\n                                       \r\n                                        <ul className=\"form-container\"> \r\n                                            <li>\r\n                                             <label>Email:</label>\r\n                                             <input name=\"email\" type=\"email\"\r\n                                              required \r\n                                              onChange={this.handleInput} >\r\n                                              </input>\r\n                                            </li>\r\n                                            <li>\r\n                                             <label>Name:</label>\r\n                                             <input name=\"name\" type=\"text\"\r\n                                              required \r\n                                              onChange={this.handleInput} >\r\n                                              </input>\r\n                                            </li>\r\n                                            <li>\r\n                                             <label>Address:</label>\r\n                                             <input name=\"address\" type=\"text\"\r\n                                              required \r\n                                              onChange={this.handleInput} >\r\n                                              </input>\r\n                                            </li>\r\n                                            <li>\r\n                                             <button className=\"button primary\" type=\"submit\">Checkout</button>\r\n                                            </li>\r\n                                        </ul>\r\n                                     \r\n                                    </form>\r\n                                </div>\r\n                                </Fade>\r\n                                \r\n                         )}\r\n                         </div>\r\n                    )}\r\n                   \r\n                   </div> \r\n          \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n      order: state.order.order,\r\n      cartItems: state.cart.cartItems,\r\n    }),\r\n    { removeFromCart, createOrder, clearOrder }\r\n  )(Cart);\r\n\r\n    ","import { CREATE_ORDER, CLEAR_CART, CLEAR_ORDER} from \"./productTypes\";\r\n\r\nexport const createOrder = (order) => (dispatch) => {\r\n  fetch(\"/api/orders\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(order),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      dispatch({ type: CREATE_ORDER, payload: data });\r\n      localStorage.clear(\"cartItems\");\r\n      dispatch({ type: CLEAR_CART });\r\n    });\r\n};\r\nexport const clearOrder = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_ORDER });\r\n};\r\n// export const fetchOrders = () => (dispatch) => {\r\n//   fetch(\"/api/orders\")\r\n//     .then((res) => res.json())\r\n//     .then((data) => {\r\n//       dispatch({ type: FETCH_ORDERS, payload: data });\r\n//     });\r\n// };","    import {createStore,applyMiddleware,compose, combineReducers} from 'redux';\r\n    import thunk from 'redux-thunk';\r\n    import { cartReducer } from './components/redux/product/cartReducer';\r\nimport { orderReducer } from './components/redux/product/orderReducer';\r\n    import {productReducer} from './components/redux/product/productReducer';\r\n    \r\n    const initialState={};\r\n    const composeEnhancer= window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__|| compose;\r\n    const store= createStore(\r\n        combineReducers({\r\n            products:productReducer,\r\n            cart:cartReducer,\r\n            order:orderReducer\r\n        }),\r\n        initialState,\r\n        composeEnhancer(applyMiddleware(thunk))\r\n    );\r\n  \r\n    export default store;","import {FETCH_PRODUCTS, FILTER_PRODUCTS_BY_SIZE, ORDER_PRODUCT_BY_PRICE} from './productTypes'\r\n\r\nexport const productReducer=(state={},action)=>{\r\n    \r\n    switch(action.type){\r\n        case FILTER_PRODUCTS_BY_SIZE:\r\n            return{\r\n                ...state,\r\n                size:action.payload.size,\r\n                filteredItems:action.payload.items\r\n               \r\n            }\r\n        case ORDER_PRODUCT_BY_PRICE:\r\n            return{\r\n                ...state,\r\n                sort:action.payload.sort,\r\n                filteredItems:action.payload.items\r\n            }    \r\n        case FETCH_PRODUCTS:\r\n            return{\r\n                items:action.payload,\r\n                filteredItems:action.payload\r\n            }\r\n        default:\r\n            return state\r\n        \r\n    }\r\n    \r\n}\r\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"./productTypes\";\r\n\r\nexport const cartReducer=(\r\n    state = { cartItems: JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\") },\r\n    action\r\n  )=>{\r\n    switch(action.type){\r\n        case ADD_TO_CART:\r\n            return{cartItems:action.payload.cartItems}\r\n        case REMOVE_FROM_CART:\r\n            return{cartItems:action.payload.cartItems}\r\n        default:\r\n            return state;\r\n    }\r\n}","import { CREATE_ORDER, CLEAR_ORDER } from \"./productTypes\";\r\n\r\nconst orderReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_ORDER:\r\n      return { order: action.payload };\r\n    case CLEAR_ORDER:\r\n      return { order: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport { orderReducer };","//feature\r\n// import data from './data.json'\r\nimport React, { Component } from 'react'\r\nimport Products from './components/Products'\r\nimport Filter from './components/Filter'\r\nimport Cart from './components/Cart'\r\nimport store from './store'\r\nimport { Provider } from 'react-redux'\r\nexport class App extends Component {\r\n  // constructor(props) {\r\n  //   super(props)\r\n  //   this.state = {\r\n  //     cartItems:localStorage.getItem(\"cartItems\")?JSON.parse(localStorage.getItem(\"cartItems\")):[],\r\n  //     //  products:data.products,\r\n  //     //  size:\"\",\r\n  //     //  sort:\"\"\r\n  //   }\r\n  // }\r\n  // createOrder=(order)=>{\r\n  //   alert ('Need to save order for  ' +order.name);\r\n  // }\r\n  // removeItems=(product)=>{\r\n  //   const cartItems=this.state.cartItems.slice()\r\n  //   this.setState({\r\n  //     cartItems:cartItems.filter(x=>x._id!==product._id)\r\n  //   }\r\n  //   )\r\n  //   localStorage.setItem(\"cartItems\", JSON.stringify(cartItems.filter(x=>x._id!==product._id)) )    \r\n  // }\r\n  // addToCart=(product)=>{\r\n  //   const cartItems=this.state.cartItems.slice();\r\n  //   let alreadyExitItem=false;\r\n  //   cartItems.forEach((item)=>{\r\n  //     if(item._id===product._id){\r\n  //       item.count++;\r\n  //       alreadyExitItem=true;\r\n  //     }\r\n  //   }); \r\n  //   if(!alreadyExitItem){\r\n  //     cartItems.push({\r\n  //       ...product,count:1\r\n  //     })\r\n  //   }\r\n  //   this.setState({cartItems})\r\n  //   localStorage.setItem(\"cartItems\", JSON.stringify(cartItems) )\r\n  // };\r\n  // filterProducts=(event)=>{\r\n  //   if(event.target.value===\"\"){\r\n  //     this.setState({\r\n  //       size:event.target.value,\r\n  //       products:data.products\r\n  //     })\r\n  //   }\r\n  //   else{\r\n  //    this.setState({\r\n  //      size:event.target.value,\r\n  //      products:data.products.filter(product=>product.availableSizes.indexOf(event.target.value)>=0)   \r\n  //    })\r\n  //   }\r\n  // }\r\n  // sortProducts=(event)=>{\r\n  //   const sort=event.target.value\r\n  //   this.setState((state)=>({\r\n  //    sort:sort,\r\n  //    products:this.state.products.slice().sort((a,b)=>\r\n  //       sort==='lowest'? \r\n  //       a.price>b.price?\r\n  //          1:-1\r\n  //       :sort==='highest'?\r\n  //       a.price<b.price?\r\n  //          1:-1\r\n  //       :a._id>b._id?\r\n  //          1:-1\r\n  //    )\r\n  //   })\r\n  //   )}\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n      <div className=\"grid-container\">\r\n        <header>\r\n          <a href=\"/\">My Shopping</a>\r\n        </header>\r\n        <main>        \r\n        <div className=\"content\">          \r\n          <div className=\"main\">\r\n          <Filter\r\n          //  count={this.state.products.length} \r\n          // size={this.state.size}\r\n          // sort={this.state.sort}\r\n          // filterProducts={this.filterProducts}\r\n          // sortProducts={this.sortProducts}\r\n          />\r\n          <Products\r\n          //  products={this.state.products} \r\n          //  addToCart={this.addToCart}\r\n           />\r\n          </div>\r\n          <div className=\"sidebar\">\r\n            <Cart\r\n            //  cartItems={this.state.cartItems} removeItems={this.removeItems}\r\n            // createOrder={this.createOrder}\r\n            /> \r\n            </div>\r\n        </div>\r\n        </main>\r\n        <footer>\r\n          All rights are reserved\r\n        </footer>\r\n      \r\n      </div>\r\n      </Provider>\r\n    );\r\n  }\r\n  }\r\n\r\n\r\nexport default App\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}